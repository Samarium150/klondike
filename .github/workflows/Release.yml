name: Release
on:
  push:
    tags:
      - v*
jobs:
  release:
    permissions:
      contents: write
    name: Release ${{ matrix.target }} target
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: web
            build_path: build/web
            build_args: --base-href /${{ github.event.repository.name }}/
          - os: ubuntu-latest
            target: linux
            build_path: build/linux/x64/release/bundle
            artifact: ${{ github.event.repository.name }}-${{ github.ref_name }}_linux.tar.gz
          - os: ubuntu-latest
            target: apk
            build_path: build/app/outputs/flutter-apk/
            build_args: --target-platform android-arm64
            artifact: ${{ github.event.repository.name }}-${{ github.ref_name }}_arm64-v8a.apk
          - os: macos-latest
            target: macos
            build_path: build/macos/Build/Products/Release
            artifact: ${{ github.event.repository.name }}-${{ github.ref_name }}_macOS.zip
          - os: macos-latest
            target: ios
            build_path: build/ios/iphoneos/
            build_args: --no-codesign
            artifact: ${{ github.event.repository.name }}-${{ github.ref_name }}_ios.ipa
          - os: windows-latest
            target: windows
            build_path: build\windows\runner\Release\
            artifact: ${{ github.event.repository.name }}-${{ github.ref_name }}_windows.zip
    steps:
      - name: Install Linux target dependencies
        if: matrix.target == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
      - name: Install Android target dependencies
        if: matrix.target == 'apk'
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '11'
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Enable desktop support
        if: matrix.target != 'android' && matrix.target != 'ios' && matrix.target != 'web'
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-windows-desktop
      - name: Check Flutter status
        run: flutter doctor -v
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get pub packages
        run: flutter pub get
      - name: Build ${{ matrix.target }}
        run: flutter build -v ${{ matrix.target }} --release ${{ matrix.build_args }}
      - name: Compress build for Linux
        if: matrix.target == 'linux'
        run: tar -czf ${{ matrix.artifact }} *
        working-directory: ${{ matrix.build_path }}
      - name: Rename build for Android
        if: matrix.target == 'apk'
        run: mv app-release.apk ${{ matrix.artifact }}
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for macOS
        if: matrix.target == 'macOS'
        run: ditto -c -k --sequesterRsrc --keepParent ${{ github.event.repository.name }}.app ${{ matrix.artifact }}
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for iOS
        if: matrix.target == 'ios'
        run: |
          mv Runner.app Payload
          zip -9 ${{ matrix.artifact }} -r Payload
        working-directory: ${{ matrix.build_path }}
      - name: Compress build for Windows
        if: matrix.target == 'Windows'
        run: Compress-Archive -Path * -DestinationPath ${{ matrix.artifact }}
        working-directory: ${{ matrix.build_path }}
      - name: Upload web artifact for GitHub Pages
        if: matrix.target == 'web'
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ matrix.build_path }}
      - name: Deploy to Releases
        if: matrix.target != 'web'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ matrix.build_path }}/${{ matrix.artifact }}
  deploy-gh-pages:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
